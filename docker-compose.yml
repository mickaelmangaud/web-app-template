version: '3.8'

services:
  next-front:
    container_name: next-front
    # image: apptemplate.azurecr.io/next
    build:
      context: ./next-front
      dockerfile: Dockerfile
    ports:
      - 3001:${NEXT_PORT}
    command: npm run dev
    volumes:
      - ./next-front:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/.next
    depends_on:
      - api

  react-front:
    container_name: react-front
    # image: apptemplate.azurecr.io/react
    build:
      context: ./react-front
      dockerfile: Dockerfile
    ports:
      - 3000:${REACT_PORT}
    environment:
      - REACT_PORT=${REACT_PORT}
    command: npm start
    volumes:
      - ./react-front:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - api

  api:
    container_name: api
    # image: apptemplate.azurecr.io/api
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - $API_PORT:${API_PORT}
    environment:
      - API_PORT=${API_PORT}
    command: npm run dev
    volumes:
      - ./api:/usr/src/app
    depends_on:
      - postgres


  postgres:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080